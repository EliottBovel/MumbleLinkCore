openapi: 3.0.3
info:
  title: Mumble Link Core
  license:
    name: MIT
    url: https://opensource.org/license/mit/
  version: 1.0.0

components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
  schemas:
    ServerInfo:
      type: object
      properties:
        server_id:
          required: true
          type: string
        server_name:
          required: true
          type: string
        max_users:
          required: true
          type: integer
        connected_users:
          required: true
          type: integer
    UserInfo:
      type: object
      properties:
        user_id:
          required: true
          type: string
        user_name:
          required: true
          type: string
        mute:
          required: true
          type: boolean
        deaf:
          required: true
          type: boolean
        self_mute:
          required: true
          type: boolean
        self_deaf:
          required: true
          type: boolean
    Error:
      type: object
      properties:
        error:
          type: string

security:
  - Bearer: []

paths:
  /servers:
    get:
      summary: Get list of servers
      responses:
        "200":
          description: Servers info
          content:
            application/json:
              schema:
                type: object
                properties:
                  servers:
                    type: array
                    items:
                      $ref: '#/components/schemas/ServerInfo'

        "500":
          description: Error while getting list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /servers/create:
    post:
      summary: Create a new server
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                max_users:
                  type: integer
      responses:
        "200":
          description: Server info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInfo'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /server/{server_id}:
    parameters:
      - name: server_id
        in: path
        required: true
        schema:
          type: string
    get:
      responses:
        "200":
          description: Server info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInfo'
        "404":
          description: Server not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      responses:
        "200":
          description: Empty
        "404":
          description: Server not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /server/{server_id}/users:
    parameters:
      - name: server_id
        in: path
        required: true
        schema:
          type: string
    get:
      responses:
        "200":
          description: Users info
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/ServerInfo'
        "404":
          description: Server not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /server/{server_id}/user/{user_id}:
    parameters:
      - name: server_id
        in: path
        required: true
        schema:
          type: string
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
    get:
      responses:
        "200":
          description: User info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /server/{server_id}/user/{user_id}/mute:
    parameters:
      - name: server_id
        in: path
        required: true
        schema:
          type: string
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: Empty
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /server/{server_id}/user/{user_id}/unmute:
    parameters:
      - name: server_id
        in: path
        required: true
        schema:
          type: string
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
    post:
      responses:
        "200":
          description: Empty
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'